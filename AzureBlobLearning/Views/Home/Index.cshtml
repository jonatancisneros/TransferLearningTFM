
@{
    ViewBag.Title = "Labeling Tool";
}
@*Header Section*@


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"/>

<script>//Calls async Task<ActionResult> DeleteImage(string name) in the HomeController and Refreshes the page
    function deleteImage(item) {
        var url = "/Home/DeleteImage";
        $.post(url, { FileUri: item }, function (data) {
            window.location.href = "/Home/Index";
        });
    }

    //Lists the file name and size for all files to be uploaded by updating the <p id="FilesToUpload"></p> control
    function DisplayFilesToUpload() {
        var element = document.getElementById("file");
        var html = "";

        html = "<h3>Image(s) to Upload</h3>"
        for (var i = 0; i < element.files.length; i++) {
            html += "<strong>" + (i + 1) + "</strong>. File: ";
            var file = element.files[i];
            if ('name' in file) { html += file.name + " ("; }
            if ('size' in file) { html += "size: " + file.size + " bytes)<br>"; }
        }

        html += "<div class='fileUpload btn btn-primary'><span>Upload</span><input type='submit' class='upload' value='Upload'/></div>"
        document.getElementById("FilesToUpload").innerHTML = html;
    }</script>




<!-- Webcam.min.js -->
<script type="text/javascript" src="~/js/webcam.min.js"></script>
<script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
<script type="text/javascript" src="~/js/cameracapture.js"></script>





<!-- CSS -->
<style>
    #my_camera {
        width: 320px;
        height: 240px;
        border: 1px solid black;
    }

    .Capture {
    }
</style>
<div id="note" class="row">
    <a href="javascript:$('#note').hide()"><i class="fa fa-close"></i></a>
    <div class="col-sm-12 col-sm-12 alert alert-success alert-dismissible fade show">
        <br />
        <p>Instructions:</p>
        <p>1) Click on record.</p>
        <p>2) Let your webcam Capture Images while you make signs like start, stop and the numbers.</p>
        <p>3) Select a label and click on upload.</p>
        <br />
         These images will be used for training an ML model that will let you give instructions to your smart home devices without voice.
        <br />
        Provide feedback to jonatane.cisneros@gmail.com
        <br />

    </div>

</div>
<div class="row">

<div class="col-sm-12 alert alert-info alert-dismissible fade show" role="alert">
    <h3 id="MessageBox"> Ready to record..</h3>
</div>
</div>
<div class="row">
    <div class="col-sm-8">
        <div id="my_camera"></div>
        <br />

    </div>
     <div class="col-sm-4">
    <div id="results"  style="height:240px; overflow:scroll"></div>
          </div>
  
</div>


 
<div class="row">

      <div class="col-sm-9">
        <button class="btn btn-primary" id="class-start">Start Recording</button>
        <button class="btn btn-danger" id="class-stop">Stop Recording</button>

        <input class="btn btn-info" type=button value="Take Snapshot" onClick="take_snapshot()">

              <br />              <br />
       
      
          <select id="optAll"  >
            <option id = "StandBy" >StandBy</option> 
            <option id = "Start" >Start</option> 
            <option id="confirm">Confirm</option> 
            <option id="cancel">Cancel</option> 
            <option id="one">1</option> 
            <option id="two">2</option>
            <option id="three">3</option> 
            <option id="four">4</option> 
            <option id="five">5</option> 
            <option id="six">6</option> 
            <option id="seven">7</option> 
            <option id="eight">8</option> 
            <option id="nine">9</option> 
            </select>
             <input class="btn btn-info" type=button value="Assign and upload All" onClick="assignAndUpdateAll()">

     
     

    </div>

</div>
<div class="row">

      <div class="col-sm-12">
 

@*Select Files and Upload: Displays a 'Select Files' button that uses a File Upload control to select files to be uploaded and
    calls the JS function: DisplayFilesToUpload() that lists the file name and size for all files to be uploaded.
    Also the JS function displays the Upload submit button that calls UploadAsync that uploads the files to Azure Blob Storage.*@
@using (Html.BeginForm("UploadAsync", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @*<div class="fileUpload btn btn-primary">
            <span>Select Files</span>
            <input type="file" id="file" name="selectFiles" class="upload" onchange="DisplayFilesToUpload()" multiple />

        </div>*@


    @* This gets populated from the DisplayFilesToUpload() JS function*@

    <div id="FilesToUpload"></div>
}

          </div></div>

 

    <div class="row" style="display:none"; height:300px; overflow:auto">
              <br />
     The following images have been captured for training and can be used as example for instructions.
        <br />
        @if (Model != null && Model.Count > 0)
        {
            foreach (var item in Model)
            {


                <div class="imageBlock">
                    <a href="@item" target="_blank"><img class="thumb" src="@item" alt="images" /> @item</a><br />
                    <div class="deleteDiv"><img class="deleteIcon" src="~/Images/deleteImage.png" title="Delete Image" onclick="deleteImage('@item');" /></div>
                </div>
            }

            using (Html.BeginForm("DeleteAll", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @*<div class="fileUpload btn btn-danger"><span>Delete All Files</span><input type="submit" name="deleteAll" class="upload" /></div>*@
            }
        }

    </div>
